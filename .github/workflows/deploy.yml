name: Deploy Atithi Guardian Protocol

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Run Linting
      run: npm run lint
      
    - name: Build
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: Archive Production Artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: |
          dist
          production-server.js
          auth.prod.js
          Procfile
          package.json
          package-lock.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
        env:
          HD_NODE_ENV: production
          HD_JWT_SECRET: ${{ secrets.JWT_SECRET }}